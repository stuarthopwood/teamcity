<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="fe8f5418-5618-4ce3-a1b3-bfe7dcd2d3aa" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/2018.1/project-config.xsd">
  <name>API Tests</name>
  <description />
  <settings>
    <options>
      <option name="showDependenciesChanges" value="true" />
    </options>
    <parameters />
    <build-runners>
      <runner id="RUNNER_2" name="" type="FdbMultilex_InstallConfigureNUnit">
        <parameters>
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_49" name="Test API" type="NUnit">
        <parameters>
          <param name="dotNetCoverage.NCover.HTMLReport.File.Sort" value="0" />
          <param name="dotNetCoverage.NCover.HTMLReport.File.Type" value="1" />
          <param name="dotNetCoverage.NCover.Reg" value="selected" />
          <param name="dotNetCoverage.NCover.platformBitness" value="x86" />
          <param name="dotNetCoverage.NCover.platformVersion" value="v2.0" />
          <param name="dotNetCoverage.NCover3.Reg" value="selected" />
          <param name="dotNetCoverage.NCover3.args" value="//ias .*" />
          <param name="dotNetCoverage.NCover3.platformBitness" value="x86" />
          <param name="dotNetCoverage.NCover3.platformVersion" value="v2.0" />
          <param name="dotNetCoverage.NCover3.reporter.executable.args" value="//or FullCoverageReport:Html:{teamcity.report.path}" />
          <param name="dotNetCoverage.PartCover.Reg" value="selected" />
          <param name="dotNetCoverage.PartCover.includes" value="[*]*" />
          <param name="dotNetCoverage.PartCover.platformBitness" value="x86" />
          <param name="dotNetCoverage.PartCover.platformVersion" value="v2.0" />
          <param name="dotNetCoverage.dotCover.home.path" value="%teamcity.tool.JetBrains.dotCover.CommandLineTools.bundled%" />
          <param name="dotNetCoverage.tool" value="dotcover" />
          <param name="dotNetTestRunner.Type" value="NUnit" />
          <param name="nunit_enabled" value="checked" />
          <param name="nunit_environment" value="auto" />
          <param name="nunit_include" value="Testing/Multilex API Tests/bin/Debug/FirstDatabank.DrugServer.MultilexAPITests.dll" />
          <param name="nunit_path" value="Packages\NUnit.ConsoleRunner.3.6.0\tools\nunit3-console.exe" />
          <param name="nunit_platform" value="MSIL" />
          <param name="nunit_version" value="NUnit-3.0.0" />
          <param name="teamcity.step.mode" value="execute_if_success" />
          <param name="teamcity.tests.runRiskGroupTestsFirst" value="recentlyFailed" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="FdbMultilexIntergration_HttpsGithubComHearstHealthInternationalFdbMultilexRefsHe">
        <checkout-rule rule="+:DrugServer =&gt; ." />
      </vcs-entry-ref>
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="vcsTrigger" type="vcsTrigger">
        <parameters>
          <param name="groupCheckinsByCommitter" value="true" />
          <param name="perCheckinTriggering" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
          <param name="watchChangesInDependencies" value="true" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <artifact-dependencies>
      <dependency id="ARTIFACT_DEPENDENCY_1" sourceBuildTypeId="FdbMultilexIntergration_DrugServer_SphinxOnline" cleanDestination="false">
        <revisionRule name="sameChainOrLastFinished" revision="latest.sameChainOrLastFinished" />
        <artifact sourcePath="Testing/Multilex API Tests/bin/Debug/FirstDatabank.DrugServer.MultilexAPITests.dll" />
      </dependency>
    </artifact-dependencies>
    <dependencies>
      <depend-on sourceBuildTypeId="FdbMultilexIntergration_DrugServer_SphinxOnline">
        <options>
          <option name="run-build-if-dependency-failed" value="RUN_ADD_PROBLEM" />
          <option name="run-build-on-the-same-agent" value="true" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

